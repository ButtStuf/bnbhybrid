#!/bin/bash
set -e  # Exit on any error

echo "ðŸš€ Starting Flap Arbitrage Deployment..."

# âœ… Install required dependencies
echo "ðŸ“¦ Installing Node.js and Python dependencies..."
npm install --save-dev hardhat @openzeppelin/contracts @nomicfoundation/hardhat-toolbox
pip3 install -q web3 flask requests python-dotenv

# âœ… Compile the Solidity contract
echo "ðŸ”¨ Compiling Flap.sol..."
npx hardhat compile

# âœ… Deploy the contract to Binance Smart Chain (BSC)
echo "ðŸš€ Deploying Flap smart contract..."
DEPLOY_OUTPUT=$(npx hardhat run scripts/deploy.js --network bsc)

# âœ… Extract deployed contract address
FLAP_CONTRACT_ADDRESS=$(echo "$DEPLOY_OUTPUT" | grep "Contract deployed to:" | awk '{print $4}')
echo "âœ… Flap Contract deployed at: $FLAP_CONTRACT_ADDRESS"

# âœ… Update `.env` file with correct addresses
echo "ðŸ”§ Updating environment variables..."
cat <<EOF > .env
BSC_RPC_URL=https://bsc-dataseed.binance.org/
PRIVATE_KEY=your_private_key_here
BOT_WALLET_ADDRESS=your_wallet_address_here
FLAP_CONTRACT_ADDRESS=$FLAP_CONTRACT_ADDRESS
ALCHEMY_API_URL=https://bnb-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY
EOF
echo "âœ… Environment variables updated!"

# âœ… Extract contract ABI for Python bot
echo "ðŸ“œ Extracting contract ABI..."
ABI_PATH="artifacts/contracts/Flap.sol/Flap.json"
jq '.abi' $ABI_PATH > flap_abi.json
echo "âœ… ABI saved to flap_abi.json"

# âœ… Start the Python arbitrage bot
echo "ðŸš€ Starting the arbitrage bot..."
nohup python3 snakeflap.py > logs/arbitrage.log 2>&1 &

echo "âœ… Arbitrage bot is running in the background!"
echo "ðŸ“Š Monitor bot status at: http://localhost 6540/status"
